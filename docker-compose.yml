networks:
  jaba_network:
    driver: bridge

services:

  ### 🟢 Banco de Dados para a Aplicação
  postgres:
    image: postgres:16
    container_name: jaba_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: jaba
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d jaba" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jaba_network

  ### 🟢 Banco de Dados para Testes
  postgres_test:
    image: postgres:16
    container_name: jaba_db_test
    restart: always
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: jaba_test
    ports:
      - "5433:5432"  # Porta diferente para evitar conflitos com o banco principal
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test_user -d jaba_test" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jaba_network

  ### 🟢 Serviço para rodar os testes
  run-tests:
    build:
      context: .
      dockerfile: Dockerfile
      target: test-runner
    container_name: jaba_tests
    depends_on:
      postgres_test:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_test:5432/jaba_test
      SPRING_DATASOURCE_USERNAME: test_user
      SPRING_DATASOURCE_PASSWORD: test_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_FLYWAY_ENABLED: true
    volumes:
      - maven_cache:/root/.m2
      - ./jacoco-reports:/app/jacoco
    entrypoint: [ "mvn", "clean", "verify" ]
    networks:
      - jaba_network
    restart: "no"  # Container para após execução dos testes

  ### 🟢 Backend Principal (Só inicia se os testes passarem)
  jaba-food-backend-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: jaba_app
    ports:
      - "8080:8080"
      - "5005:5005"
    depends_on:
      run-tests:
        condition: service_completed_successfully  # 🚀 Backend só inicia se os testes passarem
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/jaba
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      FLYWAY_URL: jdbc:postgresql://postgres:5432/jaba
      FLYWAY_USER: user
      FLYWAY_PASSWORD: password
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    networks:
      - jaba_network

  ### 🟢 PGAdmin para Gerenciamento
  pgadmin:
    image: dpage/pgadmin4
    container_name: jaba_pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@jaba.com
      PGADMIN_DEFAULT_PASSWORD: password
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - jaba_network

volumes:
  postgres_data:
  postgres_test_data:
  pgadmin_data:
  maven_cache:
