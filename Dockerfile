# ğŸ”¹ Etapa 1: ConstruÃ§Ã£o da aplicaÃ§Ã£o e testes
FROM maven:3.9.6-eclipse-temurin AS builder
WORKDIR /app

# Copia apenas o arquivo de dependÃªncias para otimizar cache
COPY pom.xml .
RUN mvn dependency:go-offline

# Copia o restante do cÃ³digo
COPY src ./src

# ğŸ”¹ Build do JAR (sem rodar testes, para ser usado pela aplicaÃ§Ã£o)
RUN mvn clean package -DskipTests

# ğŸ”¹ Etapa 2A: Ambiente para execuÃ§Ã£o dos TESTES
FROM maven:3.9.6-eclipse-temurin AS test-runner
WORKDIR /app

# Copia a aplicaÃ§Ã£o da etapa anterior
COPY --from=builder /app /app

# Executa os testes ao rodar este container
ENTRYPOINT ["sh", "-c", "mvn clean verify"]

# ğŸ”¹ Etapa 2B: Ambiente final para execuÃ§Ã£o da APLICAÃ‡ÃƒO
FROM eclipse-temurin:21-jdk AS production
WORKDIR /app

# Copia apenas o JAR final para a aplicaÃ§Ã£o
COPY --from=builder /app/target/*.jar app.jar

# Inicia a aplicaÃ§Ã£o
ENTRYPOINT ["java", "-jar", "app.jar"]